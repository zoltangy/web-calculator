{"version":3,"sources":["fonts/Display.ttf","Themes.js","GlobalStyle.js","components/ThemeSelector.js","components/ModeDisplay.js","components/AggregateDisplay.js","components/ResultDisplay.js","components/Display.js","components/Button.js","App.js","index.js"],"names":["module","exports","darkTheme","bg","border","color","display","buttonShadow","buttonBorder","buttonText","buttonBg1","buttonBg2","buttonTextShadow","lightTheme","GlobalStyle","createGlobalStyle","myFont","props","theme","Wrapper","styled","div","StyledCheckBox","input","attrs","type","ThemeSelector","onChange","handleToggle","checked","StyledModeDisplay","p","ModeDisplay","text","formulaLogic","id","StyledAggregateDisplay","AggregateDisplay","aggregate","StyledResultDisplay","ResultDisplay","StyledDisplay","Display","StyledButton","button","doubleX","css","Button","onClick","e","handleClick","target","innerHTML","StyledApp","Calculator","init","tempResult","tempValue","reducer","state","action","slice","test","isNaN","Number","operand","replace","includes","math","eval","toString","Error","match","p1","immediateLogic","App","useReducer","dispatch","useState","themeToggle","setTheme","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50288208.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Display.6f15c220.ttf\";","const darkTheme = {\r\n  bg: \"#2B384C\",\r\n  border: \"#A9ABBC\",\r\n  color: \"#F0F2EF\",\r\n  display: \"#7a7473\",\r\n  buttonShadow: \"#92979F\",\r\n  buttonBorder: \"#7D5E5A\",\r\n  buttonText: \"#F0F2EF\",\r\n  buttonBg1: \"#8E7971\",\r\n  buttonBg2: \"#967e7b\",\r\n  buttonTextShadow: \"#2b665e\"\r\n};\r\n\r\nconst lightTheme = {\r\n  bg: \"#d9d9d9\",\r\n  border: \"#1b454f\",\r\n  color: \"#cddeaa\",\r\n  display: \"#44656b\",\r\n  buttonShadow: \"#91b8b3\",\r\n  buttonBorder: \"#566963\",\r\n  buttonText: \"#dce3ca\",\r\n  buttonBg1: \"#768d87\",\r\n  buttonBg2: \"#6c7c7c\",\r\n  buttonTextShadow: \"#2b665e\"\r\n};\r\n\r\nexport { darkTheme, lightTheme };\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport myFont from \"./fonts/Display.ttf\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  @font-face {\r\n    font-family: 'Display';\r\n    src: url(${myFont}) format('truetype');\r\n    font-weight: normal;\r\n  }\r\n\r\n  html {\r\n  box-sizing: border-box;\r\n  }\r\n\r\n  *, *:before, *:after {\r\n  box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    padding: 0;\r\n    margin: 0;\r\n    background-color: ${props => props.theme.bg};\r\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 1.5rem;\r\n  padding: 7px 7px 0 0;\r\n  width: 320px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  background-color: ${props => props.theme.border};\r\n`;\r\n\r\nconst StyledCheckBox = styled.input.attrs({ type: \"checkbox\" })`\r\n  position: relative;\r\n  appearance: none;\r\n  width: 2rem;\r\n  height: calc(2rem / 2);\r\n  background-color: ${props => props.theme.bg};\r\n  border-radius: calc(2rem / 2);\r\n  border-color: ${props => props.theme.border};\r\n  outline: none;\r\n  transition: background 450ms ease;\r\n\r\n  &:before,\r\n  &:after {\r\n    position: absolute;\r\n    display: block;\r\n    content: \"\";\r\n    border-radius: 100%;\r\n    transition: background 450ms ease, transform 450ms ease;\r\n  }\r\n\r\n  &:before {\r\n    width: calc(2rem / 2);\r\n    height: calc(2rem / 2);\r\n    background-color: ${props => props.theme.buttonBg1};\r\n  }\r\n  &:checked:before {\r\n    background-color: ${props => props.theme.buttonBg1};\r\n    transform: translateX(100%);\r\n  }\r\n`;\r\n\r\nconst ThemeSelector = props => {\r\n  return (\r\n    <Wrapper>\r\n      <StyledCheckBox\r\n        onChange={() => {\r\n          props.handleToggle();\r\n        }}\r\n        checked={props.checked}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ThemeSelector;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledModeDisplay = styled.p`\r\n  width: 100%;\r\n  height: calc((100% / 4));\r\n  margin: 0px;\r\n  padding: 5px;\r\n  font-family: monospace;\r\n  font-weight: normal;\r\n  color: ${props => props.theme.color};\r\n  background-color: ${props => props.theme.display};\r\n`;\r\n\r\nconst ModeDisplay = props => {\r\n  let text = props.formulaLogic\r\n    ? \"Mode: Formula logic\"\r\n    : \"Mode: Immediate execution logic\";\r\n  return <StyledModeDisplay id=\"modeDisplay\">{text}</StyledModeDisplay>;\r\n};\r\n\r\nexport default ModeDisplay;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledAggregateDisplay = styled.p`\r\n  width: 100%;\r\n  height: calc(100% / 4);\r\n  margin: 0px;\r\n  padding: 0 5px 0 5px;\r\n  font-family: \"Display\", sans-serif;\r\n  font-weight: normal;\r\n  font-style: italic;\r\n  color: ${props => props.theme.color};\r\n  background-color: ${props => props.theme.display};\r\n  text-align: right;\r\n`;\r\n\r\nconst AggregateDisplay = props => {\r\n  return (\r\n    <StyledAggregateDisplay id=\"aggregateDisplay\">\r\n      {props.aggregate}\r\n    </StyledAggregateDisplay>\r\n  );\r\n};\r\n\r\nexport default AggregateDisplay;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledResultDisplay = styled.p`\r\n  width: 100%;\r\n  height: calc(100% / 2);\r\n  margin: 0 0 7px 0;\r\n  padding: 0 5px 0 5px;\r\n  font-family: \"Display\", sans-serif;\r\n  font-weight: normal;\r\n  font-size: 24px;\r\n  color: ${props => props.theme.color};\r\n  background-color: ${props => props.theme.display};\r\n  text-align: right;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n`;\r\n\r\nconst ResultDisplay = props => {\r\n  return (\r\n    <StyledResultDisplay id=\"display\">{props.display}</StyledResultDisplay>\r\n  );\r\n};\r\n\r\nexport default ResultDisplay;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ModeDisplay from \"./ModeDisplay\";\r\nimport AggregateDisplay from \"./AggregateDisplay\";\r\nimport ResultDisplay from \"./ResultDisplay\";\r\n\r\nconst StyledDisplay = styled.div`\r\n  height: calc((100% / 7) * 2);\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Display = props => {\r\n  return (\r\n    <StyledDisplay>\r\n      <ModeDisplay formulaLogic={props.formulaLogic} />\r\n      <AggregateDisplay aggregate={props.aggregate} />\r\n      <ResultDisplay display={props.display} />\r\n    </StyledDisplay>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst StyledButton = styled.button`\r\n  width: calc(100% / 4);\r\n  ${props =>\r\n    props.doubleX &&\r\n    css`\r\n      width: calc(100% / 2);\r\n    `};\r\n\r\n  height: calc(100% / 7);\r\n  box-shadow: inset 0px 1px 3px 0px ${props => props.theme.buttonShadow};\r\n  background: linear-gradient(\r\n    to bottom,\r\n    ${props => props.theme.buttonBg1} 5%,\r\n    ${props => props.theme.buttonBg2} 100%\r\n  );\r\n  background-color: ${props => props.theme.buttonBg1};\r\n  border-radius: 5px;\r\n  border: 1px solid ${props => props.theme.buttonBorder};\r\n  display: inline-block;\r\n  color: ${props => props.theme.buttonText};\r\n  font-family: Arial;\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n  text-shadow: 0px -1px 0px ${props => props.theme.buttonTextShadow};\r\n  &:hover {\r\n    background: linear-gradient(\r\n      to bottom,\r\n      ${props => props.theme.buttonBg2} 5%,\r\n      ${props => props.theme.buttonBg1} 100%\r\n    );\r\n    background-color: ${props => props.theme.buttonBg2};\r\n  }\r\n  &:active {\r\n    position: relative;\r\n    top: 1px;\r\n  }\r\n`;\r\n\r\nconst Button = props => {\r\n  return (\r\n    <StyledButton\r\n      id={props.id}\r\n      doubleX={!!props.doubleX}\r\n      onClick={e => {\r\n        props.handleClick({ type: e.target.innerHTML });\r\n      }}\r\n    >\r\n      {props.text}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useReducer, useState } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { Normalize } from \"styled-normalize\";\nimport { darkTheme, lightTheme } from \"./Themes\";\nimport GlobalStyle from \"./GlobalStyle\";\n\nimport ThemeSelector from \"./components/ThemeSelector.js\";\nimport Display from \"./components/Display\";\nimport Button from \"./components/Button\";\nimport math from \"mathjs-expression-parser\";\n\nconst StyledApp = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Calculator = styled.div`\n  border: 7px solid ${props => props.theme.border};\n  background-color: ${props => props.theme.border};\n  width: 320px;\n  height: 455px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, init());\n  const [themeToggle, setTheme] = useState(true);\n\n  return (\n    <StyledApp>\n      <ThemeProvider theme={themeToggle ? lightTheme : darkTheme}>\n        <ThemeSelector\n          checked={themeToggle}\n          handleToggle={() => setTheme(!themeToggle)}\n        />\n        <Calculator>\n          <Normalize />\n          <GlobalStyle />\n          <Display\n            display={state.display}\n            aggregate={state.aggregate + state.tempValue}\n            formulaLogic={state.formulaLogic}\n          />\n          <Button id=\"clear\" text=\"AC\" handleClick={dispatch} doubleX />\n          <Button id=\"mode\" text=\"Mode\" handleClick={dispatch} />\n          <Button id=\"divide\" text=\"/\" handleClick={dispatch} />\n\n          <Button id=\"seven\" text=\"7\" handleClick={dispatch} />\n          <Button id=\"eight\" text=\"8\" handleClick={dispatch} />\n          <Button id=\"nine\" text=\"9\" handleClick={dispatch} />\n          <Button id=\"multiply\" text=\"X\" handleClick={dispatch} />\n\n          <Button id=\"four\" text=\"4\" handleClick={dispatch} />\n          <Button id=\"five\" text=\"5\" handleClick={dispatch} />\n          <Button id=\"six\" text=\"6\" handleClick={dispatch} />\n          <Button id=\"subtract\" text=\"-\" handleClick={dispatch} />\n\n          <Button id=\"one\" text=\"1\" handleClick={dispatch} />\n          <Button id=\"two\" text=\"2\" handleClick={dispatch} />\n          <Button id=\"three\" text=\"3\" handleClick={dispatch} />\n          <Button id=\"add\" text=\"+\" handleClick={dispatch} />\n\n          <Button id=\"zero\" text=\"0\" handleClick={dispatch} doubleX />\n          <Button id=\"decimal\" text=\".\" handleClick={dispatch} />\n          <Button id=\"equals\" text=\"=\" handleClick={dispatch} />\n        </Calculator>\n      </ThemeProvider>\n    </StyledApp>\n  );\n}\n\nfunction init(formulaLogic = true) {\n  return {\n    aggregate: \"\",\n    display: \"0\",\n    formulaLogic: formulaLogic,\n    tempResult: \"\",\n    tempValue: \"\"\n  };\n}\n\nfunction reducer(state, action) {\n  if (action.type === \"Mode\") {\n    return init(!state.formulaLogic);\n  }\n\n  if (action.type === \"AC\") {\n    return init(state.formulaLogic);\n  }\n\n  if (state.formulaLogic) {\n    return formulaLogic(state, action);\n  } else {\n    return immediateLogic(state, action);\n  }\n}\n\nfunction formulaLogic(state, action) {\n  var display = state.display;\n  var aggregate = state.aggregate;\n\n  // new calc or result carry over\n  if (aggregate.slice(-1) === \"=\" && action.type !== \"=\") {\n    let reg = /(\\+|-|X|\\/)/;\n    if (reg.test(action.type)) {\n      // previous result should carry over for new calculation\n      aggregate = display;\n    } else {\n      // start new calculation\n      aggregate = \"\";\n    }\n    display = \"0\";\n  }\n\n  // handling numbers\n  if (!isNaN(Number(action.type))) {\n    display = display.replace(/^[+-/*]+/, \"\").replace(/^0$/, \"\") + action.type;\n    aggregate =\n      aggregate\n        .replace(/([-+*/]+)0$/, (match, p1) => {\n          return p1;\n        })\n        .replace(/^0(?![.*-/+])/, \"\") + action.type;\n  } else {\n    // handling operands, '.', '='\n    switch (action.type) {\n      case \"+\":\n      case \"/\":\n      case \"X\":\n        let operand = action.type === \"X\" ? \"*\" : action.type;\n        if (aggregate === \"\") aggregate = \"0\";\n        // Overwrite operand when pressing one after another\n        aggregate = aggregate.replace(/[+\\-*/.]+$/, \"\") + operand;\n        display = operand;\n        break;\n\n      case \"-\":\n        // pushing multiple '-' should be ignored\n        if (aggregate.slice(-1) !== \"-\") {\n          aggregate += action.type;\n          display = action.type;\n        }\n        break;\n\n      case \".\":\n        // ensure only one decimal per number\n        if (!display.includes(\".\")) {\n          // add implicit zero when decimal pushed after operand or after init\n          if (isNaN(Number(aggregate.slice(-1))) || aggregate === \"\") {\n            aggregate += \"0\" + action.type;\n            display = \"0\" + action.type;\n          } else {\n            // normal case, just add decimal\n            aggregate += action.type;\n            display += action.type;\n          }\n        }\n        break;\n\n      case \"=\":\n        // pushing '=' more than once or at init should be ignored\n        if (aggregate.slice(-1) !== \"=\" && aggregate !== \"\") {\n          // remove unfinished operand\n          aggregate = aggregate.replace(/[+\\-*/.]+$/, \"\");\n          display = math.eval(aggregate).toString();\n          aggregate += action.type;\n        }\n        break;\n\n      default:\n        throw new Error();\n    }\n  }\n  return {\n    ...state,\n    display: display,\n    aggregate: aggregate\n  };\n}\n\nfunction immediateLogic(state, action) {\n  var display = state.display;\n  var aggregate = state.aggregate;\n  var tempResult = state.tempResult;\n  var tempValue = state.tempValue;\n\n  // new calc or result carry over\n  if (tempValue.slice(-1) === \"=\" && action.type !== \"=\") {\n    let reg = /(\\+|-|X|\\/)/;\n    if (reg.test(action.type)) {\n      // previous result should carry over for new calculation\n      aggregate = display;\n      tempResult = display;\n    } else {\n      // start new calculation\n      aggregate = \"\";\n      display = \"0\";\n      tempResult = \"\";\n    }\n    tempValue = \"\";\n  }\n\n  // handling numbers\n  if (!isNaN(Number(action.type))) {\n    tempValue =\n      tempValue\n        .replace(/([-+*/]+)0$/, (match, p1) => {\n          return p1;\n        })\n        .replace(/^0(?!\\.)/, \"\") + action.type;\n    display =\n      tempResult === \"\" ? \"\" : math.eval(tempResult + tempValue).toString();\n  } else {\n    // handling operands, '.', '='\n    switch (action.type) {\n      case \"+\":\n      case \"/\":\n      case \"X\":\n        let operand = action.type === \"X\" ? \"*\" : action.type;\n        if (aggregate === \"\" && tempValue === \"\") aggregate = \"0\";\n        // Overwrite operand when pressing one after another\n        if (isNaN(Number(tempValue.slice(-1)))) {\n          tempValue = tempValue.replace(/[+\\-*/.]+$/, \"\");\n        } else {\n          tempResult = display === \"\" ? tempValue : display;\n          aggregate += tempValue;\n          tempValue = \"\";\n        }\n        tempValue += operand;\n        display = tempResult;\n        break;\n\n      case \"-\":\n        // pushing multiple '-' should be ignored\n        if (tempValue.slice(-1) !== \"-\") {\n          if (!isNaN(Number(tempValue.slice(-1)))) {\n            tempResult = display === \"\" ? tempValue : display;\n            aggregate += tempValue;\n            tempValue = \"\";\n          }\n          tempValue += action.type;\n          display = tempResult;\n        }\n        break;\n\n      case \".\":\n        // ensure only one decimal per number\n        if (!tempValue.includes(\".\")) {\n          // add implicit zero when decimal pushed after operand or after init\n          if (isNaN(Number(tempValue.slice(-1))) || tempValue === \"\") {\n            tempValue += \"0\" + action.type;\n          } else {\n            tempValue += action.type;\n          }\n        }\n        break;\n\n      case \"=\":\n        // pushing '=' more than once or at init should be ignored\n        if (tempValue.slice(-1) !== \"=\" && aggregate !== \"\") {\n          // remove unfinished operand\n          if (isNaN(Number(tempValue.slice(-1)))) {\n            tempValue = tempValue.slice(0, -1);\n          }\n          tempResult = display === \"\" ? tempValue : display;\n          aggregate += tempValue;\n          tempValue = action.type;\n          display = tempResult;\n        }\n        break;\n\n      default:\n        throw new Error();\n    }\n  }\n  return {\n    ...state,\n    display: display,\n    aggregate: aggregate,\n    tempResult: tempResult,\n    tempValue: tempValue\n  };\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}